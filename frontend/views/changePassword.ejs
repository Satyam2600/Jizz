<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Password - JIZZ</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <style>
        :root {
            --primary-color: #1C160C;
            --secondary-color: #A18249;
            --background-light: #F4EFE6;
            --success-color: #019863;
            --border-color: #E9DFCE;
        }
        
        body {
            font-family: 'Plus Jakarta Sans', 'Noto Sans', sans-serif;
            background-color: var(--background-light);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        
        .navbar {
            background-color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .main-content {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }
        
        .password-card {
            background: white;
            border-radius: 1rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 480px;
            padding: 2rem;
        }
        
        .form-control {
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            padding: 0.75rem 1rem;
            font-size: 1rem;
        }
        
        .form-control:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 0.2rem rgba(161, 130, 73, 0.25);
        }
        
        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: var(--secondary-color);
        }
        
        .password-strength {
            height: 4px;
            border-radius: 2px;
            margin-top: 0.5rem;
            transition: all 0.3s ease;
        }
        
        .password-requirements {
            font-size: 0.875rem;
            color: #6c757d;
        }
        
        .requirement-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 0.25rem;
        }
        
        .requirement-item i {
            font-size: 1rem;
        }
        
        .requirement-item.valid {
            color: var(--success-color);
        }
        
        .btn-primary {
            background-color: var(--secondary-color);
            border-color: var(--secondary-color);
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            font-weight: 600;
        }
        
        .btn-primary:hover {
            background-color: #8b6d3d;
            border-color: #8b6d3d;
        }
        
        .btn-outline-secondary {
            border-color: var(--border-color);
            color: var(--primary-color);
        }
        
        .btn-outline-secondary:hover {
            background-color: var(--background-light);
            border-color: var(--border-color);
            color: var(--primary-color);
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg">
        <div class="container">
            <a class="navbar-brand fw-bold" href="/dashboard">jizz</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/dashboard">Back to Dashboard</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="main-content">
        <div class="password-card">
            <h2 class="text-center mb-4">Change Password</h2>
            <p class="text-center text-muted mb-4">Update your password to keep your account secure</p>
            
            <form id="changePasswordForm">
                <div class="mb-4">
                    <label class="form-label">Current Password</label>
                    <div class="position-relative">
                        <input type="password" class="form-control" id="currentPassword" required>
                        <i class="bi bi-eye-slash password-toggle" onclick="togglePassword('currentPassword')"></i>
                    </div>
                </div>
                
                <div class="mb-4">
                    <label class="form-label">New Password</label>
                    <div class="position-relative">
                        <input type="password" class="form-control" id="newPassword" required>
                        <i class="bi bi-eye-slash password-toggle" onclick="togglePassword('newPassword')"></i>
                    </div>
                    <div class="password-strength" id="passwordStrength"></div>
                </div>
                
                <div class="mb-4">
                    <label class="form-label">Confirm New Password</label>
                    <div class="position-relative">
                        <input type="password" class="form-control" id="confirmPassword" required>
                        <i class="bi bi-eye-slash password-toggle" onclick="togglePassword('confirmPassword')"></i>
                    </div>
                </div>
                
                <div class="password-requirements mb-4">
                    <p class="mb-2">Password must contain:</p>
                    <div class="requirement-item" id="lengthReq">
                        <i class="bi bi-x-circle"></i>
                        <span>At least 8 characters</span>
                    </div>
                    <div class="requirement-item" id="upperReq">
                        <i class="bi bi-x-circle"></i>
                        <span>One uppercase letter</span>
                    </div>
                    <div class="requirement-item" id="numberReq">
                        <i class="bi bi-x-circle"></i>
                        <span>One number</span>
                    </div>
                    <div class="requirement-item" id="specialReq">
                        <i class="bi bi-x-circle"></i>
                        <span>One special character</span>
                    </div>
                </div>
                
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Change Password</button>
                    <a href="/dashboard" class="btn btn-outline-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Toggle password visibility
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling;
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.replace('bi-eye-slash', 'bi-eye');
            } else {
                input.type = 'password';
                icon.classList.replace('bi-eye', 'bi-eye-slash');
            }
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            const requirements = {
                length: password.length >= 8,
                upper: /[A-Z]/.test(password),
                number: /[0-9]/.test(password),
                special: /[!@#$%^&*(),.?":{}|<>]/.test(password)
            };
            
            // Update requirement indicators
            document.getElementById('lengthReq').classList.toggle('valid', requirements.length);
            document.getElementById('upperReq').classList.toggle('valid', requirements.upper);
            document.getElementById('numberReq').classList.toggle('valid', requirements.number);
            document.getElementById('specialReq').classList.toggle('valid', requirements.special);
            
            // Update icons
            document.querySelectorAll('.requirement-item').forEach(item => {
                const icon = item.querySelector('i');
                if (item.classList.contains('valid')) {
                    icon.classList.replace('bi-x-circle', 'bi-check-circle');
                } else {
                    icon.classList.replace('bi-check-circle', 'bi-x-circle');
                }
            });
            
            // Calculate strength
            const strength = Object.values(requirements).filter(Boolean).length;
            const strengthBar = document.getElementById('passwordStrength');
            
            strengthBar.style.width = `${(strength / 4) * 100}%`;
            strengthBar.style.backgroundColor = 
                strength === 0 ? '#dc3545' :
                strength === 1 ? '#ffc107' :
                strength === 2 ? '#fd7e14' :
                strength === 3 ? '#20c997' :
                '#198754';
        }

        // Form submission
        document.getElementById('changePasswordForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const currentPassword = document.getElementById('currentPassword').value;
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (newPassword !== confirmPassword) {
                alert('New passwords do not match');
                return;
            }
            
            try {
                const response = await fetch('/api/users/change-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        currentPassword,
                        newPassword
                    })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    alert('Password changed successfully');
                    window.location.href = '/dashboard';
                } else {
                    alert(data.message || 'Failed to change password');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while changing your password');
            }
        });

        // Real-time password strength checking
        document.getElementById('newPassword').addEventListener('input', (e) => {
            checkPasswordStrength(e.target.value);
        });
    </script>
</body>
</html> 