<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Jizz - Events</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
  <link rel="stylesheet" href="/assets/css/events.css">  <style>
    :root {
      --accent-gradient: linear-gradient(135deg, #019863 0%, #018555 100%);
    }

    [data-bs-theme="dark"] {
      --content-bg: #1c160c;
      --text-primary: #f4efe6;
      --text-secondary: #e9dfce;
      --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      --icon-glow: 0 0 20px rgba(1, 152, 99, 0.4);
    }

    [data-bs-theme="light"] {
      --content-bg: #ffffff;
      --text-primary: #1c160c;
      --text-secondary: #6c757d;
      --card-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      --icon-glow: none;
    }

    .coming-soon-container {
      min-height: 80vh;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
      padding: 2rem;
      background: var(--content-bg);
    }

    .coming-soon-content {
      max-width: 600px;
      position: relative;
      overflow: hidden;
      isolation: isolate;
    }

    .coming-soon-content::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: var(--accent-gradient);
      opacity: 0.1;
      z-index: -1;
      transform: scale(1.05);
      filter: blur(20px);
    }

    .coming-soon-icon {
      font-size: 5rem;
      background: var(--accent-gradient);
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
      margin-bottom: 1.5rem;
      display: inline-block;
      box-shadow: var(--icon-glow);
      animation: pulse 2s infinite;
    }

    .coming-soon-title {
      font-size: 2.8rem;
      font-weight: 800;
      margin-bottom: 1.5rem;
      color: var(--text-primary);
      background: var(--accent-gradient);
      -webkit-background-clip: text;
      background-clip: text;
      color: transparent;
    }

    .coming-soon-text {
      font-size: 1.2rem;
      color: var(--text-secondary);
      margin-bottom: 2.5rem;
      line-height: 1.8;
    }

    .gradient-bg {
      background: var(--content-bg);
      border-radius: 1.5rem;
      padding: 3.5rem;
      box-shadow: var(--card-shadow);
      border: 1px solid rgba(1, 152, 99, 0.1);
      backdrop-filter: blur(10px);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .gradient-bg:hover {
      transform: translateY(-5px);
      box-shadow: var(--card-shadow), 0 15px 35px rgba(1, 152, 99, 0.2);
    }

    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.05); }
      100% { transform: scale(1); }
    }

    .btn-primary {
      background: var(--accent-gradient);
      border: none;
      padding: 1rem 2rem;
      font-weight: 600;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(1, 152, 99, 0.3);
      background: linear-gradient(135deg, #018555 0%, #019863 100%);
    }
  </style>
</head>
<body>
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg fixed-top border-bottom">
    <div class="container-fluid px-4">
      <a class="navbar-brand fw-bold" href="#">Jizz</a>
      <button
        class="navbar-toggler"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarNav"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav me-auto">
          <li class="nav-item">
            <a class="nav-link active" href="/dashboard"
              ><i class="bi bi-house-door me-2"></i>Home</a
            >
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/communities"
              ><i class="bi bi-people me-2"></i>Communities</a
            >
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/events"
              ><i class="bi bi-calendar-event me-2"></i>Events</a
            >
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/confessions"><i class="bi bi-chat-quote me-2"></i>Confessions</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/profile/<%= user && user.rollNumber ? user.rollNumber : '' %>">
              <i class="bi bi-person-circle me-2"></i>My Profile
            </a>
          </li>
        </ul>
        <div class="d-flex align-items-center gap-3">
          <div class="theme-toggle" id="themeToggle">
            <i class="bi bi-moon"></i>
          </div>
            <a class="btn position-relative" href="/notifications" id="notificationBell" style="background: none; border: none;">
            <i class="bi bi-bell fs-5"></i>
            <span id="notificationBadge" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger d-none" style="font-size:0.7em;">0</span>
          </a>
          <div class="dropdown">
            <a href="/chat">
              <button class="btn rounded-circle border-0" id="chatButton" style="width: 40px; height: 40px; background-color: var(--accent-color); color: white; box-shadow: 0 2px 8px rgba(1, 152, 99, 0.3);">
                <i class="bi bi-chat-dots-fill fs-5"></i>
              </button>
            </a>
            <div class="dropdown-menu dropdown-menu-end">
              <a class="dropdown-item" href="/chat"><i class="bi bi-chat-dots me-2"></i>Messages</a>
              <a class="dropdown-item" href="/chat/groups"><i class="bi bi-people me-2"></i>Group Chats</a>
              <a class="dropdown-item" href="/chat/requests"><i class="bi bi-person-plus me-2"></i>Chat Requests</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item" href="#" onclick="logout(); return false;"><i class="bi bi-box-arrow-right me-2"></i>Logout</a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <!-- Main Content -->  <div class="container-fluid p-0">
    <div class="coming-soon-container">
      <div class="coming-soon-content gradient-bg">
        <i class="bi bi-calendar-stars coming-soon-icon"></i>
        <h1 class="coming-soon-title">Amazing Events Coming Soon!</h1>
        <p class="coming-soon-text">
          Get ready for  the incredible events on the  platform that will transform your campus experience! Soon you'll be able to discover trending events, create unforgettable gatherings, and connect with your community like never before. We're adding the finishing touches to bring you something truly special.
        </p>
        <div class="d-flex justify-content-center gap-3">
          <a href="/dashboard" class="btn btn-primary btn-lg rounded-pill px-4">
            <i class="bi bi-house-heart me-2"></i>Back to Home
          </a>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="/assets/js/eventStatus.js"></script>
  <script src="/assets/js/events.js"></script>
  <script src="/assets/js/logout.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    const userId = localStorage.getItem('userId') || '<%= user && user._id ? user._id : "" %>';
    const socket = window.io ? io() : null;
    let unreadCount = 0;

    function updateNotificationBell() {
      const badge = document.getElementById('notificationBadge');
      badge.textContent = unreadCount;
      badge.classList.toggle('d-none', unreadCount === 0);
    }

    async function fetchNotifications() {
      try {
        const res = await fetch('/api/notifications', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } });
        if (!res.ok) return;
        const notifications = await res.json();
        unreadCount = notifications.filter(n => !n.isRead).length;
        updateNotificationBell();
      } catch {}
    }

    if (socket && userId) {
      socket.emit('register', userId);
      socket.on('notification', function(notification) {
        fetchNotifications();
      });
    }
    fetchNotifications();

    window.addEventListener('notifications-read', function() {
      unreadCount = 0;
      updateNotificationBell();
    });
  </script>
</body>
</html>
